==========================================================
**Лабораторна робота №4. kernel threads and synchronization**
==========================================================


**Завдання:**
~~~~~~~~~~~~~
 
* Написати та зібрати власний модуль ядра, який:
  
- принимает аргументы ``th_val``, ``wrk_val`` и ``jffdelay``, реализует два потока и ворк (в дефолтном work queue), а также таймер (на базе timer wheel)        
- Запускает таймер и ворк        
- При срабатывании таймера проверяет текущее значение ``jiffies``, если оно кратно ``th_val`` – остановить первый поток; иначе – таймер перезапускается через ``jffdelay`` jiffies        
- Внутри ворка проверяет текущее значение ``jiffies``, если оно кратно ``wrk_val`` – остановить второй поток; иначе – ворк должен уснуть на ``jffdelay`` jiffies и перезапустить себя.        
- Проверить работу. Для ``th_val`` и ``wrk_val`` желательно выбирать простые числа        
- Добавить два связных списка, в которые аллоцировать и добавлять элементы со значениями jiffies которые не привели к завершению первого и второго потоков соответственно. Получается связь "таймер – 1й список – 1й поток" и  "ворк – 2й список – 2й поток"        
- При выходе из потока распечатать список        
- Внутри ворка и таймера использовать правильные аллокации для новых элементов списка, правильную синхронизацию доступа к списку        
- Предусмотреть, что пользователь может выгрузить модуль досрочно        
      

**Хід роботи:**
~~~~~~~~~~~~~~~
За основу власного модуля взято четверту лабу. Подивився LKD, довго не хотів робити для тредів різні функції, але подумав, що краще мати на одну функцію більше, ніж на одну безсонну ніч більше. Потім додав механізм зупинки тредів через прапорці, в останню чергу додав до програми linked list та роботу з ним.      

Тест модуля:   

``
/mnt # insmod mylocks.ko jffdelay=10000 th_val=11 wrk_val=61
[   25.264595] mylocks: loading out-of-tree module taints kernel.
[   25.270762] Init: called with th_val = 3, wrk_val = 5, jffdelay = 10000
[   25.271629] thread: child process [93] is running
[   25.272551] thread: child process [94] is running
/mnt # rmmod mylocks
[   67.548835] tthread was finished
[   67.549893] time = 4294733107
[   67.549953] wthread was finished
[   67.552283] time = 4294733109
/mnt # 
``

**Використані бібліотеки**
--------------------------
    

* ``<linux/module.h>``				тут загальні макроси для модулів               	
* ``<linux/moduleparam.h>``			тут все для параметризації                    		
* ``<linux/kernel.h>``				тут заголовки ядра          	
* ``<linux/init.h>``				тут все для [де]ініціалізації          	
* ``<linux/jiffies.h>``				тут лічильник та допоміжні функції          	
* ``<linux/slab.h>``				тут і          	
* ``<linux/mm.h>``					тут засоби алокації пам'яті                 
* ``<linux/sched.h>``				тут плануівльник тредів       
* ``<linux/delay.h>``				тут затримки і функції сну       
* ``<linux/list.h>``				тут списки ядра       
* ``<linux/kthread.h>``				тут функції для роботи з тредами    
* ``<linux/workqueue.h>`` 			тут черги роботи   
    


Висновки
~~~~~~~~

Було зібрано свій модуль ядра, що відповідає завданню та перевірено його працездатність. Виникло багато проблем з атомарним контекстом та завершенням потоків, але завдяки розділенню функції потоків та додаванню прапорців  їх вдалось уникнути. Модуль працює як треба.              

